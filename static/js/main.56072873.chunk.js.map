{"version":3,"sources":["component/Navbar.js","component/Textform.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","Title","type","id","About","role","onClick","togglemode","for","Textform","useState","text","setText","heading","rows","value","onChange","event","target","style","backgroundColor","color","borderColor","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","toFixed","alert","class","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","body","title","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.56072873.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.Title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                {props.About}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                onClick={props.togglemode}\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">\r\n                Enable to Dark Mode\r\n              </label>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { Title: PropTypes.string, About: PropTypes.string };\r\n\r\nNavbar.defaultProps = { Title: \"TextApp\", About: \"About\" };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n    // console.log(\"onchange\");\r\n  };\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n    // console.log(\"uppercase\");\r\n  };\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n    // console.log(\"lowercase\");\r\n  };\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared!\", \"success\");\r\n    // console.log(\"clear\");\r\n  };\r\n  const handleCopy = () => {\r\n    let text = document.getElementById(\"textbox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to ClipBoard!\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpace = () => {\r\n    var newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Remove ExtraSpaces!\", \"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className={`container text-${props.mode === \"light\" ? \"dark\" : \"light\"\r\n          }`}\r\n      >\r\n        <h2>{props.heading}</h2>\r\n        <div className=\"mb-3 my-2\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"textbox\"\r\n            rows=\"8\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#271d1d\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary mx-1\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#212529\" : \"#FF8C00\",\r\n            borderColor: props.mode === \"dark\" ? \"#59677a\" : \"white\",\r\n          }}\r\n          onClick={handleUpClick}\r\n        >\r\n          Convert to Uppercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#212529\" : \"#FF8C00\",\r\n            borderColor: props.mode === \"dark\" ? \"#59677a\" : \"white\",\r\n          }}\r\n          onClick={handleLoClick}\r\n        >\r\n          Convert to Lowercase\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#212529\" : \"#FF8C00\",\r\n            borderColor: props.mode === \"dark\" ? \"#59677a\" : \"white\",\r\n          }}\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#212529\" : \"#FF8C00\",\r\n            borderColor: props.mode === \"dark\" ? \"#59677a\" : \"white\",\r\n          }}\r\n          onClick={handleCopy}\r\n        >\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary mx-1\"\r\n          style={{\r\n            backgroundColor: props.mode === \"dark\" ? \"#212529\" : \"#FF8C00\",\r\n            borderColor: props.mode === \"dark\" ? \"#59677a\" : \"white\",\r\n          }}\r\n          onClick={handleExtraSpace}\r\n        >\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div\r\n        className={`container my-3 text-${props.mode === \"light\" ? \"dark\" : \"light\"\r\n          }`}\r\n      >\r\n        <h2>Text Summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} Words and {text.length} Character\r\n        </p>\r\n        <p>{text.split(\".\").length - 1} Sentence </p>\r\n        <p>\r\n          {(60 * (text.split(\" \").length / 275)).toFixed(2)} sec reading time.\r\n        </p>\r\n        <p>\r\n          {(60 * (text.split(\" \").length / 180)).toFixed(2)} sec specking time.\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in the textbox above to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n       props.alert && <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\n// import About from './component/About';\nimport Navbar from \"./component/Navbar\";\nimport Textform from \"./component/Textform\";\nimport Alert from \"./component/Alert\";\nimport React, { useState } from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#1f1616';\n      document.title = 'Textutils - Dark mode';\n      showAlert(\"Enable to dark mode!\", \"success\");\n      setInterval(() => {\n        document.title = 'This is Dark mode';\n      }, 1500);\n      setInterval(() => {\n        document.title = 'Textutils - Dark mode';\n      }, 1000);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = '#ffe4c4';\n      document.title = 'Textutils - Light mode';\n      showAlert(\"Enable to Light mode!\", \"success\");\n    }\n  };\n\n\n  return (\n    // <Router>\n    <div style={{ backgroundColor: mode === 'light' ? '#ffe4c4' : '#1f1616' }}>\n      <Navbar Title=\"Textutils\" mode={mode} togglemode={toggleMode} About=\"About us\" />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <Textform heading=\"Enter the text to analyse below\" showAlert={showAlert} mode={mode} />\n  \n        {/* <Routes>\n          <Route exact path=\"/about\" element={<About />} />\n\n\n          <Route exact path=\"/\" element={<Textform heading=\"Enter the text to analyse below\" showAlert={showAlert} mode={mode} />\n          } />\n\n        </Routes>\n        <About/> */}\n      </div>\n    </div>\n  //  </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}